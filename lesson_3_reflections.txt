When would you want to use a remote repository rather than keeping all your work local?

I would want a remote repo is for example I have others working on the project and there needs to be a place for everybody
to collaborate. Especially for really big projects it would be really inconvenient to host it all on one computer.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

A manual pull might might pull some changes before a new version is finalized. A major change may take more than one commit.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is a copy of a repo made on git that links back to the original. A clone
is done from GitHub to local or from local to local and does not link back. A
branch is still on the original repo.

What is the benefit of having a copy of the last known state of the remote stored locally?

It allows you to build off the latest version of the repo, and to avoid
duplicating commits that already exist in the remote. Without the latest
version, it is possible to waste time with commits that are no longer
necessary or compatible with the latest version.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

You would probably have to use something like Google Drive for collaboration.
While there wouldn't be any commands to memorize, it would also be much harder
to keep track of changes and much harder to avoid duplicating each other's work
and managing versions. In general it would be *much* harder without Git or
GitHub.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You might want to make changes in a separate branch if the changes are
experimental and you are not 100% sure if they will be permanent, or if they
might break the main program. On the other hand, working directly in master
is a lot less cumbersome and straightforward, and for basic fixes like typos
or feature additions that are easy and you are 100% sure to add just using the
master branch is simpler. 
